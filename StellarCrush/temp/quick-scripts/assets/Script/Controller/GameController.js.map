{"version":3,"sources":["GameController.js"],"names":["cc","Class","extends","Component","properties","grid","default","type","Node","gameover","scoreDisplay","Label","scoreDisplayEnd","onLoad","active","gameModel","GameModel","init","gridScript","getComponent","setController","initWithCellModels","getCells","printInfo","startTime","curTime","isClick","displayScore","string","gainScore","selectCell","pos","cleanCmd","gameOver","stopAllActions","update","dt","result","findSelectCell","console","log","reverse","ss","cellpos","v2","x","y","error"],"mappings":"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","file":"GameController.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Controller","sourcesContent":["import GameModel from \"../Model/GameModel\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        grid:{\n            default: null,\n            type: cc.Node\n        },\n        gameover:{\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        scoreDisplayEnd: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    onLoad: function () {\n        this.gameover.active=false;\n        this.gameModel = new GameModel();\n        this.gameModel.init(6);\n        var gridScript = this.grid.getComponent(\"GridView\");\n        gridScript.setController(this);\n        gridScript.initWithCellModels(this.gameModel.getCells());\n        this.gameModel.printInfo();\n        this.startTime = 0; \n        this.curTime = 0;  \n        this.isClick = false;\n    },\n\n    displayScore: function () {\n         this.scoreDisplay.string = 'Score :' + this.gameModel.gainScore();\n        // if (this.gameModel.gainScore()> 200){\n        //     this.gameOver();\n        // }\n    },\n    selectCell: function(pos){\n        this.isClick = true;\n        return this.gameModel.selectCell(pos);\n    },\n    cleanCmd: function(){\n        this.displayScore();\n        this.gameModel.cleanCmd();\n        this.curTime = 0;\n        this.isClick = false;\n    },\n    gameOver: function () {\n       \n        this.scoreDisplayEnd.string = 'Score :' + this.gameModel.gainScore();\n        this.grid.stopAllActions(); \n        this.gameover.active=true\n        //cc.director.loadScene('Game');\n    },\n\n    update: function (dt) {\n    try{\n        this.curTime += dt;\n        if(this.curTime - this.startTime > 2 && this.isClick == false){\n            let result = [];\n            result = this.gameModel.findSelectCell();\n            // try{\n            if(result!=null){\n            //console.log(result[0].count+ \" \" +result[0]);\n            console.log(result);\n            console.log(\"click cell \" + result[0].reverse()+ \" Reverse \" + result[1].reverse() + \" To \" + result[2].reverse());\n            let ss = result[0].reverse();\n            let cellpos = cc.v2(-1,-1);\n            cellpos.x = ss[1];\n            cellpos.y = ss[0];\n            // let ss1 = result[1].reverse();\n            // let cellpos1 = cc.v2(-1,-1);\n            // cellpos1.x = ss1[1];\n            // cellpos1.y = ss1[0];\n            // let ss2 = result[2].reverse();\n            // let cellpos2 = cc.v2(-1,-1);\n            // cellpos2.x = ss2[1];\n            // cellpos2.y = ss2[0];\n            var gridScript = this.grid.getComponent(\"GridView\");\n            gridScript.selectCell(cellpos);\n            }\n            else if(result==null){\n                console.log(result);\n                console.log(\"---gameover---\");\n                // let newCells = [];\n                // newCells = this.gameModel.reInitWithData();\n                // var gridScript = this.grid.getComponent(\"GridView\");\n                // gridScript.setController(this);\n                // gridScript.resetGrid();\n                // // gridScript.initWithCellModels(newCells);\n                // console.log(\"---New Seting OK---\");\n                 this.gameOver();\n                 \n                //this.scoreDisplay.string = 'Gameover'\n                // sss +=1;\n        }\n            // catch(error) {\n            //     this.gameOver();\n            // }\n            //if(!result[0] && this.gameModel.death_sign){\n                //console.log(\"---Refresh---\");\n                // let newCells = [];\n                // newCells = this.gameModel.reInitWithData();\n                // var gridScript = this.grid.getComponent(\"GridView\");\n                // gridScript.setController(this);\n                // gridScript.resetGrid();\n                // // gridScript.initWithCellModels(newCells);\n                // console.log(\"---New Seting OK---\");\n                 //this.gameOver();\n                // sss +=1;\n            //}\n            \n            \n            // gridScript.selectCell(cellpos1);\n            // gridScript.selectCell(cellpos2);\n        }\n        \n    }\n    catch(error) {\n     console.log(error);\n    }\n    \n    }\n});\n"]}